import { STANDARD_QUERY, CHECK_QUERY_TEMPLATE } from '../services/dictionary';

const generateMigrationContent = (versionNumber: number) => `/**
 * This file is auto generated by galaxy-migrations
 */

const migration${versionNumber} = {
    /**
     * This query is executed before the up query.
     * It MUST return a single count.
     * If the count is 0, then the migration doesn't need to be played.
     *
     * Set this value to null to force the execution of the migration.
     */
    checkQueryUp: "${CHECK_QUERY_TEMPLATE} < ${versionNumber}",
    /**
     * The query to execute on the way up
     */
    queryUp: "${STANDARD_QUERY}",
    /**
     * Callback to apply on each item during the migration
     *
     * It must return an Object
     */
    up: (itemBody) => itemBody,

    /**
     * This query is executed before the down query.
     * It MUST return a single count.
     * If the count is 0, then the migration doesn't need to be played.
     *
     * Set this value to null to force the execution of the migration.
     */
    checkQueryDown: "${CHECK_QUERY_TEMPLATE} > ${versionNumber}",
    /**
     * The query to execute on the way down
     */
    queryDown: "${STANDARD_QUERY}",
    /**
     * Callback to apply on each item during the rollback
     *
     * It must return an Object
     */
    down: (itemBody) => itemBody,
    /**
     * Options to pass the the queries
     * ex: { enableCrossPartitionQuery: true }
     */
    queryOptions: {},

    /**
     * Version number to apply on each item updated by this migration
     */
    versionNumber: ${versionNumber},
}

module.exports = migration${versionNumber};
`;

export { generateMigrationContent };
